{
	"views": [
		{
			"kind": "Overview",
			"properties": {
				"header": "Welcome to your Demo Azure Managed Application",
				"description": "This Managed application with Custom Provider is for demo purposes only.",
				"commands": [
					{
						"displayName": "Ping Action",
						"path": "/customping",
						"icon": "LaunchCurrent"
					}
				]
			}
		},
		{
			"kind": "CustomResources",
			"properties": {
				"displayName": "VirtualMachines",
				"version": "1.0.0.0",
				"resourceType": "VirtualMachines",
				"createUIDefinition": {
					"handler": "Microsoft.Azure.CreateUIDef",
					"parameters": {
						"config": {
							"isWizard": true
						},
						"basics": [],
						"steps": [
							{
								"name": "basic",
								"label": "Basic",
								"elements": [
									{
										"name": "subscriptionsApi",
										"type": "Microsoft.Solutions.ArmApiControl",
										"request": {
											"method": "GET",
											"path": "[concat('subscriptions', '?api-version=2020-01-01')]"
										}
									},
									{
										"name": "subscriptionDropDown",
										"type": "Microsoft.Common.DropDown",
										"label": "Subscriptions",
										"toolTip": "",
										"constraints": {
											"allowedValues": "[map(steps('basic').subscriptionsApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.subscriptionId, '\"}')))]",
											"required": true
										},
										"visible": true
									},
									{
										"name": "resourceGroupsApi",
										"type": "Microsoft.Solutions.ArmApiControl",
										"request": {
											"method": "GET",
											"path": "[concat('subscriptions/', steps('basic').subscriptionDropDown, '/resourcegroups?api-version=2020-06-01')]"
										}
									},
									{
										"name": "resourceGroupDropDown",
										"type": "Microsoft.Common.DropDown",
										"label": "Resource Groups",
										"toolTip": "",
										"constraints": {
											"allowedValues": "[map(steps('basic').resourceGroupsApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
											"required": true
										},
										"visible": true
									},
									{
										"name": "name",
										"label": "Name",
										"type": "Microsoft.Common.TextBox",
										"defaultValue": "",
										"toolTip": "Choose a name for the VM",
										"constraints": {
											"required": true
										}
									},
									{
										"name": "type",
										"type": "Microsoft.Common.DropDown",
										"label": "Instance Type",
										"placeholder": "",
										"defaultValue": "Standard_D2_v2",
										"toolTip": "Choose a size",
										"constraints": {
											"allowedValues": [
												{
													"label": "Standard_D2_v2",
													"value": "Standard_D2_v2"
												},
												{
													"label": "Standard_A2_v2",
													"value": "Standard_A2_v2"
												}
											],
											"required": true
										},
										"visible": true
									},
									{
										"name": "imageid",
										"type": "Microsoft.Common.DropDown",
										"label": "Image ID",
										"placeholder": "",
										"defaultValue": "16.04-LTS;Canonical;UbuntuServer",
										"toolTip": "",
										"constraints": {
											"allowedValues": [
												{
													"label": "Ubuntu 16",
													"value": "16.04-LTS;Canonical;UbuntuServer"
												},
												{
													"label": "Server2016",
													"value": "2016-Datacenter;MicrosoftWindowsServer;WindowsServer"
												}
											],
											"required": true
										},
										"visible": true
									}
								]
							},
							{
								"name": "networking",
								"label": "Networking",
								"elements": [
									{
										"name": "publicip",
										"type": "Microsoft.Common.DropDown",
										"defaultValue": false,
										"constraints": {
											"allowedValues": [
												{
													"label": "Yes",
													"value": true
												},
												{
													"label": "No",
													"value": false
												}
											],
											"required": true
										},
										"label": "Public IP"
									},
									{
										"name": "joinDomain",
										"label": "Join Domain",
										"type": "Microsoft.Common.DropDown",
										"defaultValue": false,
										"constraints": {
											"allowedValues": [
												{
													"label": "Yes",
													"value": true
												},
												{
													"label": "No",
													"value": false
												}
											],
											"required": true
										}
									},
									{
										"name": "joinLogAnalyticsWs",
										"label": "Join LogAnalytic Workspace",
										"type": "Microsoft.Common.DropDown",
										"defaultValue": false,
										"constraints": {
											"allowedValues": [
												{
													"label": "Yes",
													"value": true
												},
												{
													"label": "No",
													"value": false
												}
											],
											"required": true
										}
									},
									{
										"name": "subnetsApi",
										"type": "Microsoft.Solutions.ArmApiControl",
										"request": {
											"method": "POST",
											"path":"[concat('/subscriptions/',steps('basic').subscriptionDropDown, '/resourceGroups/', steps('basic').resourceGroupDropDown, '/providers/Microsoft.CustomProviders/resourceProviders/public/ProxyPost?api-version=2018-09-01-preview')]",																					
											"body": {
												"BackendUrl": "GetAzureTenantSubnets",
												"Method": "GET"
											}
										}	
									},
									{
										"name": "subnets",
										"type": "Microsoft.Common.DropDown",
										"label": "Subnets",
										"toolTip": "Choose one of the Subnets",
										"constraints": {
											"allowedValues": "[map(steps('networking').subnetsApi.value, (item) => parse(concat('{\"label\":\"', item.NameEx, '\",\"value\":\"', item.NameEx, '\"}')))]",
											"required": true
										},
										"visible": true
									}
								]
							},
							{
								"name": "advanced",
								"label": "Advanced",
								"elements": [
									{
										"name": "encryption",
										"label": "Encrypt",
										"type": "Microsoft.Common.DropDown",
										"defaultValue": false,
										"constraints": {
											"allowedValues": [
												{
													"label": "Yes",
													"value": true
												},
												{
													"label": "No",
													"value": false
												}
											],
											"required": true
										}
									},
									{
										"name": "disksize",
										"label": "Size",
										"type": "Microsoft.Common.TextBox",
										"defaultValue": "30",
										"toolTip": "Provide the Disk Size",
										"constraints": {
											"required": true
										}
									},
									{
										"name": "userdata",
										"label": "User Data",
										"type": "Microsoft.Common.TextBox",
										"defaultValue": "",
										"toolTip": "User data",
										"constraints": {}
									},
									{
										"name": "tags",
										"type": "Microsoft.Common.EditableGrid",
										"ariaLabel": "Enter information about disks",
										"label": "Tags",
										"constraints": {
											"width": "Full",
											"rows": {
												"count": {
													"min": 0,
													"max": 10
												}
											},
											"columns": [
												{
													"id": "colName",
													"header": "Name",
													"width": "1fr",
													"element": {
														"type": "Microsoft.Common.TextBox",
														"placeholder": "Name",
														"constraints": {
															"required": true,
															"validations": [
																{
																	"regex": "^[a-z0-9A-Z]{1,30}$",
																	"message": "Only alphanumeric characters are allowed, and the value must be 1-30 characters long."
																}
															]
														}
													}
												},
												{
													"id": "colVolumeId",
													"header": "Volume ID",
													"width": "1fr",
													"element": {
														"name": "dropDown1",
														"type": "Microsoft.Common.TextBox",
														"placeholder": "1",
														"constraints": {
															"required": true
														}
													}
												},
												{
													"id": "colSize",
													"header": "Size",
													"width": "1fr",
													"element": {
														"type": "Microsoft.Common.TextBox",
														"placeholder": "100",
														"constraints": {
															"required": true
														}
													}
												}
											]
										}
									}
								]
							}
						],
						"outputs": {
							"FriendlyName": "[steps('basic').name]",
							"Capacity": "[steps('basic').type]",
							"EncryptDisk": "[steps('advanced').encryption]",
							"ImageId": "[steps('basic').imageid]",
							"Base64UserData": "[steps('advanced').userdata]",
							"AllocatedPublicIp": "[steps('networking').publicip]",
							"Cloud": 2,
							"MetaDataEx": {
								"OsDiskSize": "[steps('advanced').disksize]",
								"JoinDomain": "[steps('networking').joinDomain]",
								"JoinLogAnalytics": "[steps('networking').joinLogAnalyticsWs]"
							}
						}
					}
				},
				"commands": [
					{
						"displayName": "Start",
						"path": "VirtualMachines/startAzureHost",
						"icon": "Start"
					},
					{
						"displayName": "Stop",
						"path": "VirtualMachines/stopAzureHost",
						"icon": "Stop"
					}
				],
				"columns": [
					{
						"key": "properties.FriendlyName",
						"displayName": "Full Name"
					},
					{
						"key": "properties.Status",
						"displayName": "Status"
					},
					{
						"key": "properties.PrivateIpAddress",
						"displayName": "Priavte IP",
						"optional": true
					}
				]
			}
		},

		{
			"kind": "CustomResources",
			"properties": {
				"displayName": "Update Policies",
				"version": "1.0.0.0",
				"resourceType": "UpdatePolicies",
				"createUIDefinition": {
					"handler": "Microsoft.Azure.CreateUIDef",
					"parameters": {
						"config": {
							"isWizard": true
						},
						"basics": [],
						"steps": [
							{
								"name": "basic",
								"label": "Basic",
								"elements": [
									{
										"name": "subscriptionsApi",
										"type": "Microsoft.Solutions.ArmApiControl",
										"request": {
											"method": "GET",
											"path": "[concat('subscriptions', '?api-version=2020-01-01')]"
										}
									},
									{
										"name": "subscriptionDropDown",
										"type": "Microsoft.Common.DropDown",
										"label": "Subscriptions",
										"toolTip": "",
										"constraints": {
											"allowedValues": "[map(steps('basic').subscriptionsApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.subscriptionId, '\"}')))]",
											"required": true
										},
										"visible": true
									},
									{
										"name": "resourceGroupsApi",
										"type": "Microsoft.Solutions.ArmApiControl",
										"request": {
											"method": "GET",
											"path": "[concat('subscriptions/', steps('basic').subscriptionDropDown, '/resourcegroups?api-version=2020-06-01')]"
										}
									},
									{
										"name": "resourceGroupDropDown",
										"type": "Microsoft.Common.DropDown",
										"label": "Resource Groups",
										"toolTip": "",
										"constraints": {
											"allowedValues": "[map(filter(steps('basic').resourceGroupsApi.value, (item) => startsWith(item.name, 'duplomgapp-mgr-')), (item) => parse(concat('{\"label\":\"', replace(item.name, 'duplomgapp-mgr-', ''), '\",\"value\":\"', item.name, '\"}')))]",
											"required": true
										},
										"visible": true
									},
									{
										"name": "vmListApi",
										"type": "Microsoft.Solutions.ArmApiControl",
										"request": {
											"method": "POST",
											"path":"[concat('/subscriptions/',steps('basic').subscriptionDropDown, '/resourceGroups/', steps('basic').resourceGroupDropDown, '/providers/Microsoft.CustomProviders/resourceProviders/public/ProxyPost?api-version=2018-09-01-preview')]",																					
											"body": {
												"BackendUrl": "GetAsyncNativeHosts",
												"Method": "GET"
											}
										}	
									},
									{
										"name": "VmName",
										"type": "Microsoft.Common.DropDown",
										"label": "Virtual Machine",
										"toolTip": "Choose one of the Virtual Machine",
										"constraints": {
											"allowedValues": "[map(steps('basic').vmListApi.value, (item) => parse(concat('{\"label\":\"', item.FriendlyName, '\",\"value\":\"', item.FriendlyName, '\"}')))]",
											"required": true
										},
										"visible": true
									},
									{
										"name": "UpdateClassifications",
										"label": "Update Classifications",
										"type": "Microsoft.Common.DropDown",
										"defaultValue": "Critical",
										"constraints": {
											"allowedValues": [
												{
													"label": "Critical",
													"value": "Critical"
												},
												{
													"label": "Security",
													"value": "Security"
												},
												{
													"label": "Other",
													"value": "Other"
												},
												{
													"label": "Unclassified",
													"value": "Unclassified"
												}
											]
										}
									},
									{
										"name": "rebootSetting",
										"label": "Reboot settings",
										"type": "Microsoft.Common.DropDown",
										"defaultValue": "RebootOnly",
										"constraints": {
											"allowedValues": [
												{
													"label": "RebootOnly",
													"value": "RebootOnly"
												},
												{
													"label": "IfRequired",
													"value": "IfRequired"
												}

											]
										}
									},
									{
										"name": "frequency",
										"label": "Frequency",
										"type": "Microsoft.Common.DropDown",
										"defaultValue": "OneTime",
										"constraints": {
											"allowedValues": [
												{
													"label": "OneTime",
													"value": "OneTime"
												}
											]
										}
									},
									{
										"name": "startTime",
										"label": "Update on",
										"type": "Microsoft.Common.TextBox",
										"defaultValue": "2020-10-28T19:00:00",
										"toolTip": "Format of timestamp 2020-10-28T19:00:00",
										"constraints": {
											"required": true
										}
									},
									{
										"name": "timeZone",
										"label": "TimeZone",
										"type": "Microsoft.Common.DropDown",
										"defaultValue": "America/Los_Angeles",
										"constraints": {
											"allowedValues": [
												{
													"label": "America/Los_Angeles",
													"value": "America/Los_Angeles"
												}
											]
										}
									},
									{
										"name": "duration",
										"label": "Duration",
										"type": "Microsoft.Common.TextBox",
										"defaultValue": "2H0M0S",
										"toolTip": "Format of duration 2H0M0S <N>Hours <N>Minutes <N> Seconds",
										"constraints": {
											"required": true
										}
									}
								]
							}
						],
						"outputs": {
							"VmName": "[steps('basic').VmName]",
							"properties": {
								"updateConfiguration": {
									"linux": {
										"includedUpdateClassifications": "[steps('basic').UpdateClassifications]",
										"rebootSetting": "[steps('basic').rebootSetting]"
									}
								},
								"scheduleInfo": {
									"frequency": "[steps('basic').frequency]",
									"startTime": "[concat(steps('basic').startTime, '+00:00')]",
									"timeZone": "[steps('basic').timeZone]"
								}
							}
						}
					}
				},
				"commands": [
				],
				"columns": [
					{
						"key": "name",
						"displayName": "Name"
					}
				]
			}
		}
	]
}